version: '3.8'

services:
  # Backend API Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: qtconnect-backend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=3000
      - HOST=0.0.0.0
      - DB_CLIENT=better-sqlite3
      - DB_FILENAME=/usr/src/app/data/database.sqlite
      - RATE_LIMIT_WINDOW_MS=900000
      - RATE_LIMIT_MAX_REQUESTS=1000
      - LOG_LEVEL=info
    volumes:
      - backend_data:/usr/src/app/data
      - backend_logs:/usr/src/app/logs
    ports:
      - "3000:3000"
    networks:
      - qtconnect-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 60s
      timeout: 10s
      retries: 2
      start_period: 30s

  # Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: qtconnect-frontend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - VITE_API_URL=http://backend:3000
    ports:
      - "8000:80"
    networks:
      - qtconnect-network
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/health"]
      interval: 60s
      timeout: 10s
      retries: 2
      start_period: 30s

  # Nginx Reverse Proxy (Optional - for production)
  nginx:
    image: nginx:alpine
    container_name: qtconnect-nginx
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
    networks:
      - qtconnect-network
    depends_on:
      - backend
      - frontend
    profiles:
      - production

volumes:
  backend_data:
    driver: local
  backend_logs:
    driver: local

networks:
  qtconnect-network:
    driver: bridge
