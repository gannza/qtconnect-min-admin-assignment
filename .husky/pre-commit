#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

echo "Running pre-commit checks..."

# Check if we're in a git repository
if [ ! -d ".git" ]; then
  echo "Error: Not in a git repository"
  exit 1
fi

# Function to check a directory
check_directory() {
  local dir=$1
  local dir_name=$2
  
  if [ ! -d "$dir" ]; then
    echo "Warning: $dir_name directory not found, skipping..."
    return 0
  fi
  
  echo "Checking $dir_name..."
  cd "$dir"
  
  # Check if package.json exists
  if [ ! -f "package.json" ]; then
    echo "Warning: No package.json in $dir_name, skipping..."
    cd ..
    return 0
  fi
  
  # Get staged JavaScript files for this directory
  local staged_files=$(git diff --cached --name-only --diff-filter=ACMR | grep "^$dir/" | grep "\.js$" | sed "s|^$dir/||")
  
  if [ -z "$staged_files" ]; then
    echo "No staged JavaScript files found for $dir_name, skipping..."
    cd ..
    return 0
  fi
  
  echo "Staged files in $dir_name: $staged_files"
  
  # Run ESLint on staged files if eslint is available and Node.js version is compatible
  if [ -f "node_modules/.bin/eslint" ]; then
    # Check Node.js version compatibility (requires Node.js v16+)
    node_version=$(node -v | cut -d'v' -f2 | cut -d'.' -f1)
    if [ "$node_version" -ge 16 ]; then
      echo "Running ESLint for $dir_name..."
      for file in $staged_files; do
        if [ -f "$file" ]; then
          echo "Linting $file..."
          ./node_modules/.bin/eslint "$file" || {
            echo "ESLint failed for $file"
            cd ..
            exit 1
          }
        fi
      done
    else
      echo "ESLint requires Node.js v16+ (current: $(node -v)), skipping ESLint..."
      echo "Please upgrade to Node.js v24.3.0 for full functionality"
    fi
  else
    echo "ESLint not found in $dir_name, skipping..."
  fi
  
  # Run type checking if available
  if npm run typecheck >/dev/null 2>&1; then
    echo "Running type checking for $dir_name..."
    npm run typecheck || {
      echo "Type checking failed for $dir_name"
      cd ..
      exit 1
    }
  else
    echo "No type checking script found for $dir_name, skipping..."
  fi
  
  cd ..
  echo "$dir_name checks completed"
}

# Check backend directory
check_directory "backend" "Backend"

# Check frontend directory
check_directory "frontend" "Frontend"

echo "Pre-commit checks passed!"
