/**
 * Interface for validation rules
 */
class ValidationRule {
  /**
   * Validates the given value
   * @param {*} value - The value to validate
   * @param {string} fieldName - The name of the field being validated
   * @param {Object} data - The entire data object being validated
   * @returns {Promise<ValidationResult>}
   */
  async validate(value, fieldName, data) {
    throw new Error('validate method must be implemented');
  }

  /**
   * Returns the error message for this rule
   * @param {string} fieldName - The name of the field
   * @param {*} value - The value that failed validation
   * @returns {string}
   */
  getErrorMessage(fieldName, value) {
    throw new Error('getErrorMessage method must be implemented');
  }

  /**
   * Returns the rule name
   * @returns {string}
   */
  getName() {
    throw new Error('getName method must be implemented');
  }
}

module.exports = ValidationRule;
